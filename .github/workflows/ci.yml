name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  # Main project (server + client) tests
  test-main:
    name: Test Main Project
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check
      run: npm run check

    - name: Run Prettier format check
      run: npm run format:check

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: main
        name: codecov-main
        fail_ci_if_error: false

  # Mobile app tests
  test-mobile:
    name: Test Mobile App
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json

    - name: Install mobile dependencies
      working-directory: ./mobile
      run: npm ci

    - name: Run TypeScript check for mobile
      working-directory: ./mobile
      run: npx tsc --noEmit

    - name: Run Prettier format check for mobile
      working-directory: ./mobile
      run: npm run format:check

    - name: Run ESLint for mobile
      working-directory: ./mobile
      run: npm run lint

    - name: Run mobile tests
      working-directory: ./mobile
      run: npm test

    - name: Run mobile tests with coverage
      working-directory: ./mobile
      run: npm run test:coverage

    - name: Upload mobile coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./mobile/coverage/lcov.info
        flags: mobile
        name: codecov-mobile
        fail_ci_if_error: false

  # Build test
  build:
    name: Test Build
    runs-on: ubuntu-latest
    needs: [test-main, test-mobile]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Check build artifacts
      run: |
        ls -la dist/
        if [ ! -f "dist/index.js" ]; then
          echo "Build failed: dist/index.js not found"
          exit 1
        fi

  # Integration test with multiple Node versions
  compatibility-test:
    name: Compatibility Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Run npm audit for main project
      run: |
        npm audit --audit-level=high
        echo "Main project audit completed"

    - name: Run npm audit for mobile
      working-directory: ./mobile
      run: |
        npm audit --audit-level=high
        echo "Mobile project audit completed"

  # Dependency check
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check for outdated dependencies
      run: npm outdated || true

    - name: Check for outdated mobile dependencies
      working-directory: ./mobile
      run: npm outdated || true

  # Summary job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [test-main, test-mobile, build, compatibility-test, security-audit, dependency-check]
    if: always()

    steps:
    - name: Check CI Status
      run: |
        if [[ "${{ needs.test-main.result }}" != "success" ]]; then
          echo "Main tests failed"
          exit 1
        fi
        if [[ "${{ needs.test-mobile.result }}" != "success" ]]; then
          echo "Mobile tests failed"
          exit 1
        fi
        if [[ "${{ needs.build.result }}" != "success" ]]; then
          echo "Build failed"
          exit 1
        fi
        if [[ "${{ needs.compatibility-test.result }}" != "success" ]]; then
          echo "Compatibility tests failed"
          exit 1
        fi
        if [[ "${{ needs.security-audit.result }}" != "success" ]]; then
          echo "Security audit failed"
          exit 1
        fi
        if [[ "${{ needs.dependency-check.result }}" != "success" ]]; then
          echo "Dependency check failed"
          exit 1
        fi
        echo "All CI checks passed! ðŸŽ‰"